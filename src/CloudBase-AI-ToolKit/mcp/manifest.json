{
  "dxt_version": "1.0",
  "name": "@cloudbase/cloudbase-mcp",
  "displayName": "CloudBase AI ToolKit",
  "version": "1.8.8",
  "description": "One-stop backend services for WeChat Mini-Programs and full-stack apps. Provides 38 specialized MCP tools for cloud development.",
  "longDescription": "CloudBase AI ToolKit is a comprehensive MCP server that enables AI-powered development and deployment of full-stack applications to Tencent CloudBase. It provides seamless integration with WeChat Mini-Programs, serverless cloud functions, databases, and static hosting. Perfect for developers building applications targeting the Chinese market with WeChat ecosystem integration.",
  "author": {
    "name": "TencentCloudBase",
    "email": "bookerzhao@tencent.com"
  },
  "homepage": "https://github.com/TencentCloudBase/CloudBase-AI-ToolKit",
  "repository": {
    "type": "git",
    "url": "https://github.com/TencentCloudBase/CloudBase-AI-ToolKit"
  },
  "documentation": "https://docs.cloudbase.net/ai/cloudbase-ai-toolkit/",
  "support": "https://github.com/TencentCloudBase/CloudBase-AI-ToolKit/issues",
  "license": "MIT",
  "icon": "icon.png",
  "keywords": [
    "cloudbase",
    "tencent-cloud", 
    "wechat",
    "mini-programs",
    "serverless",
    "deployment",
    "china",
    "full-stack",
    "mcp",
    "model-context-protocol"
  ],
  "categories": [
    "Cloud Development",
    "Deployment",
    "Database",
    "Web Development"
  ],
  "server": {
    "type": "node",
    "entry_point": "./dist/cli.js",
    "node_version": ">=18.0.0",
    "mcp_config": {
      "command": "node",
      "args": ["./dist/cli.js"],
      "transport": "stdio"
    }
  },
  "tools": [
    {
      "name": "login",
      "description": "Login to CloudBase environment with authentication"
    },
    {
      "name": "logout", 
      "description": "Logout from CloudBase and clear local configurations"
    },
    {
      "name": "envQuery",
      "description": "Query CloudBase environment information, domains, and settings"
    },
    {
      "name": "collectionQuery",
      "description": "Query database collections, check existence, and manage collection details"
    },
    {
      "name": "createCollection",
      "description": "Create new database collections with custom configurations"
    },
    {
      "name": "addDocument",
      "description": "Add documents to database collections"
    },
    {
      "name": "getDocument", 
      "description": "Retrieve documents from database collections"
    },
    {
      "name": "updateDocument",
      "description": "Update existing documents in database collections"
    },
    {
      "name": "deleteDocument",
      "description": "Delete documents from database collections"
    },
    {
      "name": "createFunction",
      "description": "Create and deploy cloud functions with automatic dependency management"
    },
    {
      "name": "updateFunctionCode",
      "description": "Update cloud function code and configuration"
    },
    {
      "name": "getFunctionList",
      "description": "List all cloud functions in the environment"
    },
    {
      "name": "invokeFunction",
      "description": "Invoke cloud functions with parameters"
    },
    {
      "name": "getFunctionLogs",
      "description": "Retrieve cloud function execution logs for debugging"
    },
    {
      "name": "uploadFiles",
      "description": "Upload files to static hosting with CDN acceleration"
    },
    {
      "name": "getWebsiteConfig",
      "description": "Get static hosting configuration and domain information"
    },
    {
      "name": "downloadRemoteFile",
      "description": "Download remote files to local storage"
    },
    {
      "name": "uploadFile",
      "description": "Upload files to cloud storage and get access URLs"
    },
    {
      "name": "searchKnowledgeBase",
      "description": "Search CloudBase knowledge base using vector search for professional documentation"
    },
    {
      "name": "downloadTemplate",
      "description": "Download project templates with CloudBase best practices"
    },
    {
      "name": "interactiveDialog",
      "description": "Interactive dialog for user confirmations and requirement clarification"
    },
    {
      "name": "uploadMiniprogramCode",
      "description": "Upload WeChat Mini-Program code to WeChat platform for deployment"
    },
    {
      "name": "previewMiniprogramCode",
      "description": "Preview WeChat Mini-Program code and generate QR code for testing"
    },
    {
      "name": "buildMiniprogramNpm",
      "description": "Build npm packages for WeChat Mini-Program projects"
    },
    {
      "name": "getMiniprogramProjectConfig",
      "description": "Get WeChat Mini-Program project configuration and settings"
    }
  ],
  "requirements": {
    "node": ">=18.0.0",
    "authentication": "CloudBase environment required"
  },
  "configuration": {
    "environment": {
      "description": "CloudBase environment configuration",
      "variables": [
        {
          "name": "CLOUDBASE_ENV_ID",
          "description": "CloudBase Environment ID",
          "required": false
        }
      ]
    }
  },
  "capabilities": [
    "WeChat Mini-Program development and deployment",
    "Serverless cloud functions and databases", 
    "One-click deployment to production",
    "China market access with WeChat ecosystem",
    "Built-in cloud development knowledge base",
    "AI-native tools for modern development workflows"
  ],
  "transport": ["stdio"],
  "platforms": ["darwin", "linux", "win32"],
  "tags": [
    "cloudbase",
    "tencent-cloud",
    "wechat", 
    "mini-programs",
    "serverless",
    "deployment",
    "china",
    "full-stack"
  ]
} 